==PROF== Connected to process 2138324 (/data/csslab-parsons/mirask/a.out)
==PROF== Profiling "gemv_shared_mem" - 0: 0%....50%....100% - 37 passes
Execution time of Shared Memory Optimized GEMV with array_size=10000 and block_size=32: 1768.78 ms
==PROF== Disconnected from process 2138324
[2138324] a.out@127.0.0.1
  gemv_shared_mem(const float *, const float *, float *, int, int) (313, 1, 1)x(32, 1, 1), Context 1, Stream 7, Device 0, CC 8.6
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         6.99
    SM Frequency                    Ghz         1.50
    Elapsed Cycles                cycle    2,271,957
    Memory Throughput                 %        70.92
    DRAM Throughput                   %        59.18
    Duration                         ms         1.52
    L1/TEX Cache Throughput           %        73.33
    L2 Cache Throughput               %        23.10
    SM Active Cycles              cycle 2,175,177.41
    Compute (SM) Throughput           %         7.94
    ----------------------- ----------- ------------

    OPT   Memory is more heavily utilized than Compute: Look at the Memory Workload Analysis section to identify the L1 
          bottleneck. Check memory replay (coalescing) metrics to make sure you're efficiently utilizing the bytes      
          transferred. Also consider whether it is possible to do more work per memory access (kernel fusion) or        
          whether there are values you can (re)compute.                                                                 

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved       
          close to 1% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel        
          Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details  
          on roofline analysis.                                                                                         

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         4.06
    Dropped Samples                sample            0
    Maximum Sampling Interval          us           32
    # Pass Groups                                    2
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         0.12
    Executed Ipc Elapsed  inst/cycle         0.12
    Issue Slots Busy               %         3.11
    Issued Ipc Active     inst/cycle         0.12
    SM Busy                        %         3.11
    -------------------- ----------- ------------

    OPT   Est. Local Speedup: 98.63%                                                                                    
          All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps   
          per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.             

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s       264.91
    Mem Busy                              %        70.92
    Max Bandwidth                         %        59.18
    L1/TEX Hit Rate                       %        88.75
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %         0.85
    Mem Pipes Busy                        %         7.94
    --------------------------- ----------- ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 61.82%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 4.1 of the 32    
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %         3.14
    Issued Warp Per Scheduler                        0.03
    No Eligible                            %        96.86
    Active Warps Per Scheduler          warp         1.70
    Eligible Warps Per Scheduler        warp         0.03
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 29.08%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 31.9 cycles. This might leave hardware resources underutilized and may lead to    
          less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of   
          1.70 active warps per scheduler, but only an average of 0.03 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp  
          State Statistics and Source Counters sections.                                                                

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        54.36
    Warp Cycles Per Executed Instruction           cycle        54.36
    Avg. Active Threads Per Warp                                31.95
    Avg. Not Predicated Off Threads Per Warp                    30.69
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 29.08%                                                                                          
          On average, each warp of this kernel spends 47.0 cycles being stalled waiting for a scoreboard dependency on  
          a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited     
          upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the        
          memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by        
          increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently     
          used data to shared memory. This stall type represents about 86.5% of the total average of 54.4 cycles        
          between issuing two instructions.                                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst    67,579.08
    Executed Instructions                           inst   12,434,551
    Avg. Issued Instructions Per Scheduler          inst    67,587.64
    Issued Instructions                             inst   12,436,125
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    32
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                    313
    Registers Per Thread             register/thread              40
    Shared Memory Configuration Size           Kbyte           65.54
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            2.05
    # SMs                                         SM              46
    Threads                                   thread          10,016
    Uses Green Context                                             0
    Waves Per SM                                                0.43
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           16
    Block Limit Registers                 block           48
    Block Limit Shared Mem                block           21
    Block Limit Warps                     block           48
    Theoretical Active Warps per SM        warp           16
    Theoretical Occupancy                     %        33.33
    Achieved Occupancy                        %        14.01
    Achieved Active Warps Per SM           warp         6.73
    ------------------------------- ----------- ------------

    OPT   Est. Speedup: 29.08%                                                                                          
          The difference between calculated theoretical (33.3%) and measured achieved occupancy (14.0%) can be the      
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 29.08%                                                                                          
          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 12. This kernel's theoretical occupancy (33.3%) is limited by the number of blocks that   
          can fit on the SM.                                                                                            

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle    6,275,128
    Total DRAM Elapsed Cycles        cycle   84,822,016
    Average L1 Active Cycles         cycle 2,175,177.41
    Total L1 Elapsed Cycles          cycle  103,460,546
    Average L2 Active Cycles         cycle 2,112,020.97
    Total L2 Elapsed Cycles          cycle   69,118,272
    Average SM Active Cycles         cycle 2,175,177.41
    Total SM Elapsed Cycles          cycle  103,460,546
    Average SMSP Active Cycles       cycle 2,155,404.58
    Total SMSP Elapsed Cycles        cycle  413,842,184
    -------------------------- ----------- ------------

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.08
    Branch Instructions              inst      980,316
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

    OPT   Est. Speedup: 85.22%                                                                                          
          This kernel has uncoalesced global accesses resulting in a total of 87500000 excessive sectors (87% of the    
          total 100391876 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source      
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional      
          information on reducing uncoalesced device memory accesses.                                                   

